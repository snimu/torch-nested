[metadata]
name = torch_nested
version = 0.0.1
description = Easily manipulate torch.Tensors inside highly nested data-structures.
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/snimu/torch-nested
author = Sebastian Nicolas Muller @snimu
author_email = sebastian.nicolas.mueller@gmail.com
license = MIT
license_files = [LICENSE]
classifiers =
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3 :: Only
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
keywords = torch pytorch nested torch-nested tensor tensors nested-tensors deep-learning ml

[options]
python_requires = >=3.7
include_package_data = True
package_dir=
    =src
packages=find:

[options.packages.find]
where=src

[options.package_data]
torch_benchmarks = py.typed

[mypy]
strict = True
implicit_reexport = True
show_error_codes = True
enable_error_code = ignore-without-code

[pylint.main]
evaluation = 10.0 - ((float(5 * error + warning + refactor + convention + info) / statement) * 10)

[pylint.MESSAGES CONTROL]
extension-pkg-whitelist = torch
enable =
    useless-suppression,
    deprecated-pragma,
    use-symbolic-message-instead,
disable =
    missing-module-docstring,
    missing-function-docstring,
    too-many-instance-attributes,
    too-many-arguments,
    too-many-branches,
    too-many-locals,
    invalid-name,
    line-too-long,  # Covered by flake8
    no-member,
    fixme,
    duplicate-code,

[isort]
profile = black

[flake8]
max-line-length = 88
extend-ignore = E203,F401
